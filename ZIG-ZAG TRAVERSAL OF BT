/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        queue<TreeNode *> q;
        vector<vector<int>> res;
        if(!root) return res;
        bool LtoR= true;
        q.push(root);
        while(!q.empty()){
            int sz= q.size();
            vector<int> row;
            int rev=0;
            for(int i=0; i<sz; i++){
                if(q.front()->right){
                        q.push(q.front()->right);
                    }
                    if(q.front()->left){
                        q.push(q.front()->left);
                    }
                if(LtoR){    
                    rev=0;
                }
                else{
                    rev=1;
                }
                 row.push_back(q.front()->val);
                    q.pop();  
            }
            if(LtoR? LtoR=false : LtoR=true);
            if(rev==0) reverse(row.begin(), row.end());
            res.push_back(row);
        }
        return res;
    
    }
};
